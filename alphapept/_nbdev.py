# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"alphapept_screen": "00_main.ipynb",
         "main": "00_main.ipynb",
         "version": "00_main.ipynb",
         "IsotopeDistribution": "01_chem.ipynb",
         "fast_add": "01_chem.ipynb",
         "numba_bin": "01_chem.ipynb",
         "dict_to_dist": "01_chem.ipynb",
         "spec": "10_constants.ipynb",
         "get_average_formula": "01_chem.ipynb",
         "mass_to_dist": "01_chem.ipynb",
         "mz_to_mass": "04_feature_finding.ipynb",
         "M_PROTON": "04_feature_finding.ipynb",
         "get_most_abundant": "02_io.ipynb",
         "load_thermo_raw": "02_io.ipynb",
         "raw_to_npz": "02_io.ipynb",
         "check_sanity": "02_io.ipynb",
         "extract_mzml_info": "02_io.ipynb",
         "extract_mzxml_info": "02_io.ipynb",
         "read_mzML": "02_io.ipynb",
         "read_mzXML": "02_io.ipynb",
         "list_to_numpy_f32": "02_io.ipynb",
         "save_as_npz": "02_io.ipynb",
         "cleave_sequence": "03_fasta.ipynb",
         "parse": "03_fasta.ipynb",
         "list_to_numba": "03_fasta.ipynb",
         "get_decoy_sequence": "03_fasta.ipynb",
         "swap_KR": "03_fasta.ipynb",
         "swap_AL": "03_fasta.ipynb",
         "get_decoys": "03_fasta.ipynb",
         "add_decoy_tag": "03_fasta.ipynb",
         "add_fixed_mods": "03_fasta.ipynb",
         "get_mod_pos": "03_fasta.ipynb",
         "get_isoforms": "03_fasta.ipynb",
         "add_variable_mods": "03_fasta.ipynb",
         "add_fixed_mod_terminal": "03_fasta.ipynb",
         "add_fixed_mods_terminal": "03_fasta.ipynb",
         "add_variable_mods_terminal": "03_fasta.ipynb",
         "get_unique_peptides": "03_fasta.ipynb",
         "generate_peptides": "03_fasta.ipynb",
         "get_precmass": "03_fasta.ipynb",
         "get_fragmass": "03_fasta.ipynb",
         "get_frag_dict": "03_fasta.ipynb",
         "read_fasta_file": "03_fasta.ipynb",
         "read_fasta_file_entries": "03_fasta.ipynb",
         "read_fasta": "03_fasta.ipynb",
         "check_sequence": "03_fasta.ipynb",
         "add_to_pept_dict": "03_fasta.ipynb",
         "generate_library": "03_fasta.ipynb",
         "generate_spectra": "03_fasta.ipynb",
         "save_library": "03_fasta.ipynb",
         "get_peaks": "04_feature_finding.ipynb",
         "get_centroid": "04_feature_finding.ipynb",
         "gaussian_estimator": "04_feature_finding.ipynb",
         "raw_to_centroid": "04_feature_finding.ipynb",
         "get_pairs_centroids": "04_feature_finding.ipynb",
         "tup_to_ind": "04_feature_finding.ipynb",
         "ind_to_tup": "04_feature_finding.ipynb",
         "connect_centroids_forward": "04_feature_finding.ipynb",
         "connect_centroids_backward": "04_feature_finding.ipynb",
         "connect_centroids": "04_feature_finding.ipynb",
         "get_hills": "04_feature_finding.ipynb",
         "plot_hill": "04_feature_finding.ipynb",
         "smooth_mean": "04_feature_finding.ipynb",
         "smooth_median": "04_feature_finding.ipynb",
         "smooth": "04_feature_finding.ipynb",
         "get_minima": "04_feature_finding.ipynb",
         "split_hills": "04_feature_finding.ipynb",
         "split_hill": "04_feature_finding.ipynb",
         "split_recursive": "04_feature_finding.ipynb",
         "filter_hills": "04_feature_finding.ipynb",
         "weighted_average": "04_feature_finding.ipynb",
         "get_hill_stats": "04_feature_finding.ipynb",
         "get_hill_data_numba": "04_feature_finding.ipynb",
         "get_hill_data": "04_feature_finding.ipynb",
         "check_isotope_pattern": "04_feature_finding.ipynb",
         "DELTA_M": "04_feature_finding.ipynb",
         "DELTA_S": "04_feature_finding.ipynb",
         "cosinec": "04_feature_finding.ipynb",
         "extract_edge": "04_feature_finding.ipynb",
         "get_edges": "04_feature_finding.ipynb",
         "plot_pattern": "04_feature_finding.ipynb",
         "check_isotope_pattern_directed": "04_feature_finding.ipynb",
         "grow": "04_feature_finding.ipynb",
         "grow_trail": "04_feature_finding.ipynb",
         "get_trails": "04_feature_finding.ipynb",
         "isolate_isotope_pattern": "04_feature_finding.ipynb",
         "check_averagine": "04_feature_finding.ipynb",
         "pattern_to_mz": "04_feature_finding.ipynb",
         "cosine_averagine": "04_feature_finding.ipynb",
         "int_list_to_array": "04_feature_finding.ipynb",
         "get_minpos": "04_feature_finding.ipynb",
         "get_local_minima": "04_feature_finding.ipynb",
         "is_local_minima": "04_feature_finding.ipynb",
         "truncate": "04_feature_finding.ipynb",
         "get_isotope_patterns": "04_feature_finding.ipynb",
         "feature_finder_report": "04_feature_finding.ipynb",
         "plot_isotope_pattern": "04_feature_finding.ipynb",
         "find_features": "04_feature_finding.ipynb",
         "compare_frags": "05_search.ipynb",
         "ppm_to_dalton": "05_search.ipynb",
         "get_idxs": "05_search.ipynb",
         "compare_specs_parallel": "05_search.ipynb",
         "compare_specs_single": "05_search.ipynb",
         "query_data_to_features": "05_search.ipynb",
         "get_psms": "05_search.ipynb",
         "frag_delta": "05_search.ipynb",
         "intensity_fraction": "05_search.ipynb",
         "intensity_product": "05_search.ipynb",
         "b_y_hits": "05_search.ipynb",
         "score_parallel": "05_search.ipynb",
         "score_single": "05_search.ipynb",
         "add_column": "05_search.ipynb",
         "remove_column": "05_search.ipynb",
         "get_sequences": "05_search.ipynb",
         "get_score_columns": "05_search.ipynb",
         "plot_hit": "05_search.ipynb",
         "perform_search": "05_search.ipynb",
         "filter_seq": "06_score.ipynb",
         "filter_score": "06_score.ipynb",
         "get_q_values": "06_score.ipynb",
         "cut_fdr": "06_score.ipynb",
         "score_psms": "06_score.ipynb",
         "score_x_tandem": "06_score.ipynb",
         "get_protein_groups": "06_score.ipynb",
         "perform_protein_grouping": "06_score.ipynb",
         "cut_global_fdr": "06_score.ipynb",
         "save_report_as_npz": "06_score.ipynb",
         "estimate_stepsize": "07_recalibration.ipynb",
         "get_calibration": "07_recalibration.ipynb",
         "to_numba_list": "08_quantification.ipynb",
         "fast_error": "08_quantification.ipynb",
         "fast_error_scalar": "08_quantification.ipynb",
         "fast_peptide_error": "08_quantification.ipynb",
         "peptide_error": "08_quantification.ipynb",
         "elution_profile": "08_quantification.ipynb",
         "gaussian": "08_quantification.ipynb",
         "return_elution_profile": "08_quantification.ipynb",
         "simulate_sample_profiles": "08_quantification.ipynb",
         "simulate_peptide_intensities": "08_quantification.ipynb",
         "get_protein_ratios": "08_quantification.ipynb",
         "triangle_error": "08_quantification.ipynb",
         "solve_BFGS": "08_quantification.ipynb",
         "AAs": "10_constants.ipynb",
         "mass_dict": "10_constants.ipynb",
         "get_mass_dict": "10_constants.ipynb",
         "Isotope": "10_constants.ipynb",
         "isotopes": "10_constants.ipynb",
         "averagine_aa": "10_constants.ipynb",
         "averagine_avg": "10_constants.ipynb",
         "protease_dict": "10_constants.ipynb",
         "print_settings": "11_settings.ipynb",
         "settings": "11_settings.ipynb",
         "raw": "11_settings.ipynb",
         "fasta": "11_settings.ipynb",
         "search": "11_settings.ipynb",
         "features": "11_settings.ipynb",
         "general": "11_settings.ipynb",
         "calibration": "11_settings.ipynb"}

modules = ["main.py",
           "chem.py",
           "io.py",
           "fasta.py",
           "feature_finding.py",
           "search.py",
           "score.py",
           "recalibration.py",
           "quantification.py",
           "constants.py",
           "settings.py"]

doc_url = "https://mannlabs.github.io/alphapept/"

git_url = "https://github.com/mannlabs/alphapept/tree/master/"

def custom_doc_links(name): return None
